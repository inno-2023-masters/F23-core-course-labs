# full values: https://github.com/pprometheus.prometheusSpec.podMonitorSelectorNilUsesHelmValuesrometheus-community/helm-charts/blob/main/charts/kube-prometheus-stack/values.yaml


# Problem with etcd GRPC rule is described here: https://github.com/rancher/rancher/issues/29939
# need to account for more than just grpc_code!=OK
defaultRules:
  disabled:
    etcdHighNumberOfFailedGRPCRequests: true

kubeEtcd:
  enabled: true
  service:
    enabled: true
    port: 2381
    targetPort: 2381

alertmanager:
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
    hosts: ['alertmanager.k8s.local']
    paths: ['/']
    tls:
    - secretName: tls-credential
      hosts:
      - alertmanager.k8s.local

  alertmanagerSpec:
    externalUrl: https://alertmanager.k8s.local/
    routePrefix: /

  config:
    global:
      resolve_timeout: 5m
      # global smtp settings
      #smtp_from: amgr@kubeadm
      #smtp_smarthost: 10.249.161.96:1025
      smtp_require_tls: false

    route:
      group_by: ['alertname'] # not default job
      group_wait: 2s # not default 30
      group_interval: 30s # not default 5m
      repeat_interval: 4h # not default 12h
      #receiver: email_platform
      #routes:
     # - receiver: 'null'
        #matchers:
     #     - alertname =~ "InfoInhibitor|Watchdog"
      #- receiver: email_platform
        #continue: true
    #receivers:
    # https://prometheus.io/docs/alerting/latest/configuration/#email_config
    #- name: email_platform
      #email_configs:
      #- to: platform@{k8s_implementation}}
        #send_resolved: true
        #headers:
          #subject: "{{ .Status | toUpper }} {{ .CommonLabels.mycluster }}:{{ .CommonLabels.namespace }}:{{ .CommonLabels.alertname }} {{ .CommonAnnotations.summary }}"
    #- name: 'null'
    #templates:
    #- '/etc/alertmanager/config/*.tmpl'

grafana:
  # username is 'admin'
  adminPassword: prom-operator
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
    hosts: ['grafana.k8s.local']
    path: "/"
    tls:
    - secretName: tls-credential
      hosts:
      - grafana.k8s.local

prometheus:
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
    hosts: ['prometheus.k8s.local']
    paths: ['/']
    tls:
    - secretName: tls-credential
      hosts:
      - prometheus.k8s.local

  prometheusSpec:
    externalUrl: "https://prometheus.k8s.local/"
    routePrefix: /

    # do not require new PrometheusRule to have all the helm labels in order to match
    ruleSelectorNilUsesHelmValues: false
    
    podMonitorSelectorNilUsesHelmValues: false
    serviceMonitorSelectorNilUsesHelmValues: false
   
#    serviceMonitorSelector:
      #matchLabels:
#        serviceMonitorSelector: {}

    # additional scrape job
    additionalScrapeConfigs:

      - job_name: kubernetes-service-endpoints
        kubernetes_sd_configs:
        - {role: service}
        relabel_configs:
        - action: keep
          regex: true
          source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
        - action: drop
          regex: (kube-system|prom)
          source_labels: [__meta_kubernetes_namespace]
        - action: keep
          regex: .*metrics
          source_labels: [__meta_kubernetes_service_port_name]
        - action: replace
          regex: (https?)
          source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
          target_label: __scheme__
        - action: replace
          regex: (.+)
          source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
          target_label: __metrics_path__
        - action: replace
          regex: ([^:]+)(?::\d+)?;(\d+)
          replacement: $1:$2
          source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
          target_label: __address__
        - {action: labelmap, regex: __meta_kubernetes_service_label_(.+)}
        - action: replace
          source_labels: [__meta_kubernetes_namespace]
          target_label: kubernetes_namespace
        - action: replace
          source_labels: [__meta_kubernetes_service_name]
          target_label: kubernetes_name

    # external labels will be common for all alerts and available for templating in AlertManager
    externalLabels: {'cluster': 'kind-kind', 'env': 'dev', 'jumpbox': 'localhost.local'}

    #storageSpec:
      #volumeClaimTemplate:
        #spec:
          #storageClassName: nfs-client
          #accessModes: ["ReadWriteOnce"]
          #resources:
            #requests:
              #storage: 5Gi
