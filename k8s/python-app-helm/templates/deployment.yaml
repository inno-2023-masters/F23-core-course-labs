apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "python-app-helm.fullname" . }}
  labels:
    {{- include "python-app-helm.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "python-app-helm.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "python-app-helm.labels" . | nindent 8 }}
	{{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "python-app-helm.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
          {{- include "python-app.envVars" . | nindent 12 }}
          - name: "PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: db-user-pass
                  key: password
          - name: "USERNAME"
              valueFrom:
                secretKeyRef:
                  name: db-user-pass
                  key: username
            - name: Some-KEY
          - name: SOME-KEY
            valueFrom:
              configMapKeyRef:
                name: config-entity
                key: test
          volumeMounts:
          - name: config-volume-py
            mountPath: "/config.json"
            subPath: config.json
          - name: counter-data-py
            mountPath: /data
      volumes:
      - name: config-volume-py
        configMap:
          name: config-entity
      - name: counter-data-py
        emptyDir:
          sizeLimit: 500Mi
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}