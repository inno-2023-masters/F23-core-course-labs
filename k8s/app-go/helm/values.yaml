# Default values for app-go.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 2
PodManagementPolicy: Parallel


image:
  repository: docker.io/0x22d1ab/app_go
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: NodePort
  port: 8080

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 100m
    memory: 256Mi
  requests:
    cpu: 100m
    memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 40

# Additional volumes on the output Deployment definition.
volumes:  
  - name: config-volume
    configMap:
      name: app-go-config
    

# Additional volumeMounts on the output Deployment definition.
volumeMounts: 
  - name: config-volume
    mountPath: /app/config.json
    subPath: config.json
  - name: app-go-data
    mountPath: /app/data
  - name: init-data
    mountPath: /app/init-data

volumeClaimTemplates:
  - metadata:
      name: app-go-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 5Mi
  - metadata:
      name: init-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 5Mi


initContainers:
  - name: config-downloader
    image: busybox:1.28
    command: ['sh', '-c', 'sleep 2 && wget -O /app/init-data/config.json https://raw.githubusercontent.com/lcensies/core-course-labs/lab14/k8s/app-go/helm/files/config.json' ]
    volumeMounts:
      - name: init-data
        mountPath: /app/init-data
  - name: queued-writer-1
    image: busybox:1.28
    command: ['sh', '-c', 'sleep 1.5 && echo "Hello from first init container in queue" > /app/init-data/init_ordered_access_demo.txt' ]
    volumeMounts:
      - name: init-data
        mountPath: /app/init-data
  - name: queued-writer-2
    image: busybox:1.28
    command: ['sh', '-c', 'sleep 1 && echo "Hello from second init container in queue" >> /app/init-data/init_ordered_access_demo.txt' ]
    volumeMounts:
      - name: init-data
        mountPath: /app/init-data
  - name: queued-writer-3
    image: busybox:1.28
    command: ['sh', '-c', 'sleep 1 && echo "Hello from third init container in queue" >> /app/init-data/init_ordered_access_demo.txt' ]
    volumeMounts:
      - name: init-data
        mountPath: /app/init-data


  
# 
nodeSelector: {}

tolerations: []

affinity: {}