replicaCount: 3

image:
  repository: lnsfna/app_python
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

# Specifies sleep time for pre-hook and post-hook
sleepyTime: 5

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: NodePort
  port: 8080

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: python.app
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
 limits:
   cpu: 100m
   memory: 128Mi
 requests:
   cpu: 100m
   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

envFrom:
  - configMapRef:
      name: python-config-map
# Additional volumes on the output Deployment definition.
volumes:
  - name: python-config-volume
    configMap:
      name: python-config-map
  - name: python-counter-data
    emptyDir:
      sizeLimit: 500Mi
  - name: python-init
    emptyDir: { }

volumeMounts:
            - name: python-config-volume
              mountPath: "/config.json"
              subPath: config.json
            - name: python-counter-data
              mountPath: /data
            - name: python-init
              mountPath: /init_data

volumeClaimTemplates:
  - metadata:
      name: python-counter-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 62Mi

initContainers:
- name: install
  image: busybox:1.28
  command:
    - wget
    - "-O"
    - "/work-dir/index.html"
    - http://info.cern.ch
  volumeMounts:
    - name: python-init
      mountPath: "/work-dir"
- name: append-line-1
  image: busybox:1.28
  command:
  - sh
  - "-c"
  - "echo this > /work-dir/text.txt"
  volumeMounts:
    - name: python-init
      mountPath: "/work-dir"
- name: append-line-2
  image: busybox:1.28
  command:
  - sh
  - "-c"
  - "echo is >> /work-dir/text.txt"
  volumeMounts:
    - name: python-init
      mountPath: "/work-dir"
- name: append-line-3
  image: busybox:1.28
  command:
  - sh
  - "-c"
  - "echo 'lab 14' >> /work-dir/text.txt"
  volumeMounts:
    - name: python-init
      mountPath: "/work-dir"

nodeSelector: {}

tolerations: []

affinity: {}