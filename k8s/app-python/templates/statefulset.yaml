apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "app-python.fullname" . }}
  labels:
    {{- include "app-python.labels" . | nindent 4 }}
spec:
  serviceName: "{{ include "app-python.fullname" . }}"
  replicas: {{ .Values.replicaCount }}
  podManagementPolicy: {{ .Values.podManagementPolicy }}
  selector:
    matchLabels:
      {{- include "app-python.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "app-python.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "app-python.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: PASSWORD
              valueFrom:
                secretKeyRef:
                  name: credentials
                  key: secret
            {{- include "app-python.environments" . | nindent 12 }}
          envFrom:
            - configMapRef:
                name: config
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          volumeMounts:
            - name: workdir
              mountPath: /workdir
            - name: config-volume
              mountPath: /app/config.json
              subPath: config.json
      initContainers:
        - name: install-0
          image: busybox:1.28
          command:
          - wget
          - "-O"
          - "/workdir/index.html"
          - http://info.cern.ch
          volumeMounts:
          - name: workdir
            mountPath: "/workdir"
        - name: install-1
          image: busybox:1.28
          command:
          - sh
          - "-c"
          - 'echo "install-1 was here" >> /workdir/index.html'
          volumeMounts:
          - name: workdir
            mountPath: "/workdir"
        - name: install-2
          image: busybox:1.28
          command:
          - sh
          - "-c"
          - 'echo "install-2 was here" >> /workdir/index.html'
          volumeMounts:
          - name: workdir
            mountPath: "/workdir"
      volumes:
        - name: workdir
          emptyDir: {}
        - name: config-volume
          configMap:
            name: config
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 5Mi
  {{- with .Values.nodeSelector }}
  nodeSelector:
    {{- toYaml . | nindent 8 }}
  {{- end }}
  {{- with .Values.affinity }}
  affinity:
    {{- toYaml . | nindent 8 }}
  {{- end }}
  {{- with .Values.tolerations }}
  tolerations:
    {{- toYaml . | nindent 8 }}
  {{- end }}
