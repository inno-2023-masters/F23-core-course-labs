version: "3.7"

x-logging: &logging
  driver: "json-file"
  options:
    max-size: "100m"
    max-file: "2"
    tag: "{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}"

x-healthcheck: &healthcheck
  interval: 10s
  timeout: 5s
  retries: 3
  start_period: 5s

services:
  app_python:
    image: yesliesnayder/app_python:1.0.6
    ports:
      - "8000:8000"
    deploy:
      resources:
        limits:
          memory: 256m
    healthcheck:
      test: curl http://localhost:8000/healthz || exit 1
      <<: *healthcheck
    logging:
      <<: *logging
    volumes:
      - ./app_python_data:/data

  app_golang:
    image: yesliesnayder/webservicego:1.0.0
    ports:
      - "8001:8000"
    deploy:
      resources:
        limits:
          memory: 256m
    healthcheck:
      test: curl http://localhost:8000/healthz || exit 1
      <<: *healthcheck
    logging:
      <<: *logging

  loki:
    image: grafana/loki:2.9.2
    command: -config.file=/etc/loki/local-config.yaml
    deploy:
      resources:
        limits:
          memory: 512m
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 -O /dev/null http://localhost:3100/ready || exit 1"]
      <<: *healthcheck
    logging:
      <<: *logging

  promtail:
    image: grafana/promtail:2.9.2
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers
      - ./promtail-config.yml:/etc/promtail/config.yml
    command: -config.file=/etc/promtail/config.yml
    deploy:
      resources:
        limits:
          memory: 512m
    healthcheck:
      test: ["CMD-SHELL", "timeout 5 bash -c 'cat < /dev/null > /dev/tcp/localhost/9080' || exit 1"]
      <<: *healthcheck
    logging:
      <<: *logging

  grafana:
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    image: grafana/grafana:10.1.5
    volumes:
      - ./grafana:/etc/grafana/provisioning
    ports:
      - "3000:3000"
    deploy:
      resources:
        limits:
          memory: 1g
    healthcheck:
      test: curl -f http://localhost:3000/api/health || exit 1
      <<: *healthcheck
    logging:
      <<: *logging

  prometheus:
    image: prom/prometheus:v2.47.2
    volumes:
      - ./prometheus:/etc/prometheus
    command: '--config.file=/etc/prometheus/config.yml'
    ports:
      - "9090:9090"
    deploy:
      resources:
        limits:
          memory: 1g
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 -O /dev/null http://localhost:9090/-/healthy || exit 1"]
      <<: *healthcheck
    logging:
      <<: *logging
