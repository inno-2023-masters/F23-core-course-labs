version: "3.7"

networks:
  loki:

services:
  app_python:
    image: lnsfna/app_python:latest
    container_name: app_python
    ports:
      - "8080:8080"
    deploy:
      resources:
        limits:
          memory: 256m
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8080/health" ]
      interval: 10s
      timeout: 10s
      start_period: 5s
      retries: 3
    logging: &logging
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "2"
        tag: '{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}'
    networks:
      - loki


  app_go:
    image: lnsfna/app_go:latest
    container_name: app_go
    ports:
      - "8081:8081"
    deploy:
      resources:
        limits:
          memory: 256m
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8081/health" ]
      interval: 10s
      timeout: 10s
      start_period: 5s
      retries: 3
    logging: *logging
    networks:
      - loki
  loki:
    container_name: loki
    image: grafana/loki:2.9.1
    ports:
      - "3100:3100"
    deploy:
      resources:
        limits:
          memory: 512m
    command: -config.file=/etc/loki/local-config.yaml
    healthcheck:
      test: [ "CMD-SHELL", "wget -q --tries=1 --spider http://localhost:3100/ready || exit 1" ]
      timeout: 10s
      start_period: 1m
    logging: *logging
    networks:
      - loki

  promtail:
    image: grafana/promtail:2.9.1
    container_name: promtail
    ports:
      - "9080:9080"
    deploy:
      resources:
        limits:
          memory: 512m
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - ${PWD}/promtail/config.yml:/etc/promtail/config.yml:ro
    command: -config.file=etc/promtail/config.yml
    healthcheck:
      test: [ "CMD-SHELL", "bash -c 'cat < /dev/null > /dev/tcp/localhost/9080' || exit 1" ]
      timeout: 30s
      start_period: 10s
    logging: *logging
    networks:
      - loki

  grafana:
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    volumes:
      - ./grafana:/etc/grafana/provisioning
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    deploy:
      resources:
        limits:
          memory: 1g
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:3000" ]
      timeout: 10s
      start_period: 15s
    logging: *logging
    networks:
      - loki

  prometheus:
    image: prom/prometheus:v2.47.2
    volumes:
      - ./prometheus:/etc/prometheus
    command: '--config.file=/etc/prometheus/config.yml'
    ports:
      - "9090:9090"
    deploy:
      resources:
        limits:
          memory: 1g
    healthcheck:
      test: [ "CMD-SHELL", "wget -q --tries=1 --spider http://localhost:9090/status || exit 1" ]
      timeout: 10s
      start_period: 15s
    logging: *logging
    networks:
      - loki