name: Elixir CI

on:
  push:
    branches: ["main"]
    paths:
      - "app_elixir/**"
      - ".github/workflows/elixir_ci.yaml"
  pull_request:
    branches: ["main"]
    paths:
      - "app_elixir/**"
      - ".github/workflows/elixir_ci.yaml"

  workflow_dispatch:

env:
  WORKING_DIR: app_elixir
  MIX_ENV: test

jobs:
  test:
    timeout-minutes: 30
    defaults:
      run:
        working-directory: ./${{ env.WORKING_DIR }}

    runs-on: ubuntu-latest

    strategy:
      matrix:
        otp: ["25.0.4"]
        elixir: ["1.14.3"]

    name: Test on OTP ${{matrix.otp}} / Elixir ${{matrix.elixir}}

    steps:
      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          otp-version: ${{matrix.otp}}
          elixir-version: ${{matrix.elixir}}

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache deps
        id: cache-deps
        uses: actions/cache@v3
        env:
          cache-name: cache-elixir-deps
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ env.cache-name }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-${{ env.cache-name }}-

      - name: Cache compiled build
        id: cache-build
        uses: actions/cache@v3
        env:
          cache-name: cache-compiled-build
        with:
          path: _build
          key: ${{ runner.os }}-mix-${{ env.cache-name }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-${{ env.cache-name }}-
            ${{ runner.os }}-mix-

      - name: Install dependencies
        run: mix deps.get
      - name: Compiles without warnings
        run: mix compile --warnings-as-errors

      - name: Check Formatting
        run: mix format --check-formatted

      - name: Run tests
        run: mix test

  build-and-publish:
    timeout-minutes: 30
    permissions:
      contents: read
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./${{ env.WORKING_DIR }}
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/elixir_devops:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
