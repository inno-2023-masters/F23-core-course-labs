name: Pipeline for Python app

on:
  push:
    branches: [ "lab3", "main" ]
    paths: [ "app_python/**", ".github/workflows/app_python.yml" ]
  pull_request:
    branches: [ "main" ]
    paths: [ "app_go/**", ".github/workflows/app_go.yml" ]

permissions:
  contents: read

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
        cache: "pip"
    - name: Install dependencies
      run: |
        pip install -r requirements.txt
      working-directory: app_python
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistic
      working-directory: app_python/app

  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v4
      with:
        python-version: "3.11"
        cache: "pip"
    - name: Install dependencies
      run: |
        pip install -r requirements.txt
      working-directory: app_python
    - name: Run tests with Pytest
      run: |
        python -m pytest
      working-directory: app_python/app

  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: "pip"
      - name: copy
        run: cp -r app_python/* .
      - name: tree
        run: tree .
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/python-3.10@master
        with:
          command: test
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      
  docker:
    runs-on: ubuntu-latest
    needs: [lint,test,security]
    steps:
    - uses: actions/checkout@v4
    - name: Login to Dockerhub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: tree
      run: tree .
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: app_python
        file: app_python/Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/devops-app-python:latest
