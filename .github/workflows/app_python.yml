name: Python CI

on:
  push:
    paths:
      - 'app_python/**'
      - '.github/workflows/app_python.yml'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.11

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-

      - name: Install dependencies
        run: pip install -r ./app_python/requirements.txt

      - name: Lint code
        run: |
          pylint ./app_python/app.py
          pylint ./app_python/tests

      - name: Run tests
        run: python -m unittest discover -s app_python/tests -p '*_tests.py'

  snyk:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/python-3.10@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --file=app_python/requirements.txt
            --package-manager=pip
            --skip-unresolved

  docker:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/my-flask-app
          docker push ${{ secrets.DOCKER_USERNAME }}/my-flask-app
