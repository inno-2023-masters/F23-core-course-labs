name: App Go CI
on:
  pull_request:
    paths:
      - 'app_go/**'
      - '.github/workflows/app_go_ci.yaml'
env:
  WORKING_DIR: app_go
  DOCKER_IMAGE_NAME: goapp
  DOCKER_IMAGE_TAG: latest
jobs:
  security:
    timeout-minutes: 30
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/golang@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --sarif-file-output=snyk.sarif ${{ env.WORKING_DIR }}
      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: snyk.sarif
  build-and-test:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./${{ env.WORKING_DIR }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'
      - name: Install dependencies
        run: go mod download
      - name: Lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.54
          working-directory: app_go
      - name: Test
        run: go test -v ./...
  dockerhub-push:
    timeout-minutes: 30
    permissions:
      contents: read
    needs:
      - build-and-test
      - security
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./${{ env.WORKING_DIR }}
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:${{
            env.DOCKER_IMAGE_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

