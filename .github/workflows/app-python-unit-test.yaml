name: python_app_unit_testing

on:
  push:
    paths:
      - ".github/workflows/app-python-unit-test.yaml"
      - "app_python/**"
      - "!app_python/**.md"

defaults:
  run:
    shell: bash
    working-directory: app_python

jobs:
  checks:
    runs-on: ubuntu-22.04
    permissions:
      security-events: write
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}

      - name: Restore dependencies cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: ${{ runner.os }}-poetry-

      - name: Install dependencies
        run: poetry install
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'

      - name: Unit tests
        if: always()
        run: |
          . ./.venv/bin/activate
          export PYTHONPATH=`pwd`/src 
          pytest test --junit-xml=test-results.xml

      - name: Vulnerability check
        uses: snyk/actions/python@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --sarif-file-output=python_snyk.sarif
            --file=app_python/requirements.txt
            --package-manager=pip
            --skip-unresolved

      - name: Linter
        run: |
          pylint app.py --fail-under=8 --disable=missing-module-docstring --disable=missing-class-docstring --disable=missing-function-docstring
          pylint ./tests --fail-under=8 --disable=missing-module-docstring --disable=missing-class-docstring --disable=missing-function-docstring
