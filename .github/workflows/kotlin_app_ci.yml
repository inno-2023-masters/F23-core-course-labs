name: Kotlin App CI

on:
  pull_request:
    paths:
      - app_kotlin/**
      - .github/workflows/kotlin_app_ci.yml

env:
  WORKING_DIR: app_kotlin
  DOCKER_IMAGE_NAME: base-converter
  DOCKER_IMAGE_TAG: latest

jobs:
  security:
    timeout-minutes: 30
    permissions:
      contents: read
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/gradle-jdk17@master
        continue-on-error: true # To make sure that SARIF upload gets called
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args:
            --sarif-file-output=snyk.sarif
            ${{ env.WORKING_DIR }}
      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v2
        with:
          checkout_path: ${{ env.WORKING_DIR }}
          sarif_file: snyk.sarif

  test-and-lint:
    timeout-minutes: 30
    runs-on: ubuntu-22.04
    permissions:
      security-events: write
    defaults:
      run:
        working-directory: ./${{ env.WORKING_DIR }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
      - name: Run check with Gradle Wrapper
        run: ./gradlew check # lint and test are included into check gradle task
      - name: Upload linter and tests results
        uses: actions/upload-artifact@v3
        with:
          name: test-and-linter-reports
          path: ${{ env.WORKING_DIR }}/build/reports/

  dockerhub-push:
    timeout-minutes: 30
    permissions:
      contents: read
    needs: [ test-and-lint, security ]
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./${{ env.WORKING_DIR }}
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_IMAGE_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
