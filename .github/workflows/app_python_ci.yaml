name: app_python CI

on:
  push:
    paths:
      - 'app_python/**'

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff pytest
          pip install -r app_python/requirements.txt
      - name: Lint with ruff
        run: |
          # stop the build if there are Python syntax errors or undefined names
          ruff --format=github --select=E9,F63,F7,F82 --target-version=py37 .
          # default set of ruff rules with GitHub Annotations
          ruff --format=github --target-version=py37 .
      - name: Test with pytest
        run: |
          pytest app_python/test.py
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Docker build and run tests
        uses: docker/build-push-action@v5
        with:
          context: ./app_python
          file: app_python/Dockerfile
          target: test
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/app_python_test
      - name: Test
        run: |
          docker run --rm ${{ secrets.DOCKERHUB_USERNAME }}/app_python_test         
      - name: Docker build and push
        uses: docker/build-push-action@v5
        with:
          context: ./app_python
          file: app_python/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/app_python

